<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">Prohod.WebApi/Prohod.WebApi.csproj</projectFile>
    <projectFile profileName="https">Prohod.WebApi/Prohod.WebApi.csproj</projectFile>
    <projectFile profileName="httpsProduction">Prohod.WebApi/Prohod.WebApi.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="91fbe3be-fac1-4737-b258-f5d21d8e386a" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.prohod-backend/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.prohod-backend/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend repo/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/backend repo/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend repo/prometheus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/backend repo/prometheus.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="94e4c7df-3791-4f1b-9d2d-0d25a21bf2b9" />
        <option name="url" value="https://github.com/kozlov174/prohod-backend.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="Toolset" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2dr1gMJHZLVcLrH3Z9l3DIkHVQK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.backend repo.node-exporter: Compose Deployment.executor": "Run",
    "Docker.backend repo.prometheus: Compose Deployment.executor": "Run",
    "Docker.backend repo.server: Compose Deployment.executor": "Run",
    "Docker.backend repo: Compose Deployment.executor": "Run",
    "Docker.devops repo: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\d.d.kozlov\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\DecompilerCache",
      "C:\\Users\\d.d.kozlov\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\SourcesCache",
      "C:\\Users\\d.d.kozlov\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Docker.backend repo: Compose Deployment">
    <configuration name="Prohod.WebApi: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Prohod.WebApi/Prohod.WebApi.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Prohod.WebApi: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Prohod.WebApi/Prohod.WebApi.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Prohod.WebApi: httpsProduction" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Prohod.WebApi/Prohod.WebApi.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="httpsProduction" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="backend repo: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="backend repo/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="backend repo.node-exporter: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="node-exporter" />
            </list>
          </option>
          <option name="sourceFilePath" value="backend repo/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="backend repo.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="backend repo/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="backend repo.server: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="server" />
            </list>
          </option>
          <option name="sourceFilePath" value="backend repo/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="devops repo: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="devops repo/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.Prohod.WebApi: http" />
      <item itemvalue=".NET Launch Settings Profile.Prohod.WebApi: https" />
      <item itemvalue=".NET Launch Settings Profile.Prohod.WebApi: httpsProduction" />
      <item itemvalue="Docker.backend repo.node-exporter: Compose Deployment" />
      <item itemvalue="Docker.backend repo.prometheus: Compose Deployment" />
      <item itemvalue="Docker.backend repo.server: Compose Deployment" />
      <item itemvalue="Docker.backend repo: Compose Deployment" />
      <item itemvalue="Docker.devops repo: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.backend repo: Compose Deployment" />
        <item itemvalue="Docker.backend repo.node-exporter: Compose Deployment" />
        <item itemvalue="Docker.backend repo.prometheus: Compose Deployment" />
        <item itemvalue="Docker.backend repo.server: Compose Deployment" />
        <item itemvalue="Docker.devops repo: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="91fbe3be-fac1-4737-b258-f5d21d8e386a" name="Changes" comment="" />
      <created>1710751495161</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1710751495161</updated>
      <workItem from="1710751497598" duration="14003000" />
    </task>
    <task id="LOCAL-00001" summary="refactor project struct">
      <option name="closed" value="true" />
      <created>1710762236534</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1710762236535</updated>
    </task>
    <task id="LOCAL-00002" summary="new version for docker compose">
      <option name="closed" value="true" />
      <created>1710765491495</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1710765491495</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="refactor project struct" />
    <MESSAGE value="new version for docker compose" />
    <option name="LAST_COMMIT_MESSAGE" value="new version for docker compose" />
  </component>
</project>